{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport BASEAPIURL from \"../vars\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CompletedTasks = function CompletedTasks() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    completedTasks = _useState2[0],\n    setCompletedTasks = _useState2[1];\n  useEffect(function () {\n    fetchCompletedTasks();\n  }, []);\n  var fetchCompletedTasks = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var response = yield fetch(BASEAPIURL + \"/completed-tasks\", {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        if (response.ok) {\n          var completedTasksData = yield response.json();\n          setCompletedTasks(completedTasksData);\n        } else {\n          console.error(\"Failed to fetch completed tasks data\");\n        }\n      } catch (error) {\n        console.error(\"An error occurred while fetching completed tasks data:\", error);\n      }\n    });\n    return function fetchCompletedTasks() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsxs(View, {\n      style: styles.item,\n      children: [_jsx(Text, {\n        children: item.taskName\n      }), _jsx(Text, {\n        children: item.taskDescription\n      }), _jsx(Text, {\n        children: item.completedDate\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Completed Tasks\"\n    }), completedTasks.length > 0 ? _jsx(FlatList, {\n      data: completedTasks,\n      renderItem: renderItem,\n      keyExtractor: function keyExtractor(item) {\n        return item._id;\n      }\n    }) : _jsx(Text, {\n      children: \"No completed tasks available\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 20\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    marginBottom: 20\n  },\n  item: {\n    marginBottom: 10,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: \"gray\",\n    borderRadius: 5\n  }\n});\nexport default CompletedTasks;","map":{"version":3,"names":["React","useState","useEffect","View","Text","FlatList","StyleSheet","BASEAPIURL","jsx","_jsx","jsxs","_jsxs","CompletedTasks","_useState","_useState2","_slicedToArray","completedTasks","setCompletedTasks","fetchCompletedTasks","_ref","_asyncToGenerator","response","fetch","method","headers","ok","completedTasksData","json","console","error","apply","arguments","renderItem","_ref2","item","style","styles","children","taskName","taskDescription","completedDate","container","title","length","data","keyExtractor","_id","create","flex","justifyContent","alignItems","padding","fontSize","fontWeight","marginBottom","borderWidth","borderColor","borderRadius"],"sources":["/Users/robertpratl/taskcam-summer-project/client/screens/CompletedTasks.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { View, Text, FlatList, StyleSheet } from \"react-native\";\nimport BASEAPIURL from \"../vars\";\n\nconst CompletedTasks = () => {\n  const [completedTasks, setCompletedTasks] = useState([]);\n\n  useEffect(() => {\n    // Fetch completed tasks data from the API\n    fetchCompletedTasks();\n  }, []);\n\n  const fetchCompletedTasks = async () => {\n    try {\n      const response = await fetch(`${BASEAPIURL}/completed-tasks`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response.ok) {\n        const completedTasksData = await response.json();\n        setCompletedTasks(completedTasksData);\n      } else {\n        console.error(\"Failed to fetch completed tasks data\");\n      }\n    } catch (error) {\n      console.error(\n        \"An error occurred while fetching completed tasks data:\",\n        error\n      );\n    }\n  };\n\n  const renderItem = ({ item }) => (\n    <View style={styles.item}>\n      <Text>{item.taskName}</Text>\n      <Text>{item.taskDescription}</Text>\n      <Text>{item.completedDate}</Text>\n    </View>\n  );\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Completed Tasks</Text>\n      {completedTasks.length > 0 ? (\n        <FlatList\n          data={completedTasks}\n          renderItem={renderItem}\n          keyExtractor={(item) => item._id}\n        />\n      ) : (\n        <Text>No completed tasks available</Text>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 20,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    marginBottom: 20,\n  },\n  item: {\n    marginBottom: 10,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: \"gray\",\n    borderRadius: 5,\n  },\n});\n\nexport default CompletedTasks;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}