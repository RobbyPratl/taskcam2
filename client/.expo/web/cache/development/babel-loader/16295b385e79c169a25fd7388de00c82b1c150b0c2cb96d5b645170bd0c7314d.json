{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport BASEAPIURL from \"../vars\";\nimport { useSelector } from \"react-redux\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Home = function Home() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    tasks = _useState2[0],\n    setTasks = _useState2[1];\n  useEffect(function () {\n    console.log(\"Auth Token:\", localStorage.getItem(\"token\"));\n    var fetchTasks = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var response = yield fetch(BASEAPIURL + \"/tasks\");\n          var tasksData = yield response.json();\n          console.log(\"Response Body:\", responseBody.text());\n          if (response.ok) {\n            setTasks(tasksData);\n          } else {\n            console.error(\"Failed to fetch tasks:\", tasksData.message);\n          }\n        } catch (error) {\n          console.error(\"An error occurred:\", error);\n        }\n      });\n      return function fetchTasks() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchTasks();\n  }, []);\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsx(View, {\n      style: styles.taskItem,\n      children: _jsx(Text, {\n        children: item.title\n      })\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Task List\"\n    }), tasks.length === 0 ? _jsx(Text, {\n      children: \"No tasks available\"\n    }) : _jsx(FlatList, {\n      data: tasks,\n      renderItem: renderItem,\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      contentContainerStyle: styles.taskList\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 20\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    marginBottom: 20\n  },\n  taskList: {\n    flexGrow: 1,\n    width: \"100%\"\n  },\n  taskItem: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: 10,\n    marginBottom: 10,\n    backgroundColor: \"#eee\",\n    borderRadius: 5\n  }\n});\nexport default Home;","map":{"version":3,"names":["React","useState","useEffect","View","Text","FlatList","StyleSheet","BASEAPIURL","useSelector","jsx","_jsx","jsxs","_jsxs","Home","_useState","_useState2","_slicedToArray","tasks","setTasks","console","log","localStorage","getItem","fetchTasks","_ref","_asyncToGenerator","response","fetch","tasksData","json","responseBody","text","ok","error","message","apply","arguments","renderItem","_ref2","item","style","styles","taskItem","children","title","container","length","data","keyExtractor","id","contentContainerStyle","taskList","create","flex","justifyContent","alignItems","padding","fontSize","fontWeight","marginBottom","flexGrow","width","flexDirection","backgroundColor","borderRadius"],"sources":["/Users/robertpratl/taskcam-summer-project/client/screens/Home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { View, Text, FlatList, StyleSheet } from \"react-native\";\nimport BASEAPIURL from \"../vars\";\nimport { useSelector } from \"react-redux\"; // Import useSelector from react-redux\n\nconst Home = () => {\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    console.log(\"Auth Token:\", localStorage.getItem(\"token\"));\n\n    // Fetch tasks data from the server\n    const fetchTasks = async () => {\n      try {\n        const response = await fetch(`${BASEAPIURL}/tasks`);\n        const tasksData = await response.json();\n\n        console.log(\"Response Body:\", responseBody.text());\n        if (response.ok) {\n          setTasks(tasksData);\n        } else {\n          console.error(\"Failed to fetch tasks:\", tasksData.message);\n        }\n      } catch (error) {\n        console.error(\"An error occurred:\", error);\n      }\n    };\n\n    fetchTasks();\n  }, []);\n\n  const renderItem = ({ item }) => (\n    <View style={styles.taskItem}>\n      <Text>{item.title}</Text>\n      {/* Render additional task details */}\n    </View>\n  );\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Task List</Text>\n      {tasks.length === 0 ? (\n        <Text>No tasks available</Text>\n      ) : (\n        <FlatList\n          data={tasks}\n          renderItem={renderItem}\n          keyExtractor={(item) => item.id}\n          contentContainerStyle={styles.taskList}\n        />\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 20,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    marginBottom: 20,\n  },\n  taskList: {\n    flexGrow: 1,\n    width: \"100%\",\n  },\n  taskItem: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: 10,\n    marginBottom: 10,\n    backgroundColor: \"#eee\",\n    borderRadius: 5,\n  },\n});\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}